{"version":3,"file":"static/js/195.fbe255e6.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactItem/Contactitem.module.css?e295","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.data.contacts;\nexport const selectIsLoading = state => state.data.contacts.isLoading;\nexport const selectError = state => state.data.contacts.error;\nexport const selectValueFilter = state => state.sorting.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectValueFilter],\n  (contacts, filter) =>\n    contacts.items.filter(el =>\n      el.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n\nexport const selectNameContacts = createSelector([selectContacts], contacts =>\n  contacts.items.map(el => el.name)\n);\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\n\nimport { selectNameContacts } from 'redux/contacts/selectors';\n\nimport TextField from '@mui/material/TextField';\nimport { Box } from '@mui/material';\nimport { Button } from '@mui/material';\nimport Typography from '@mui/material/Typography';\n\nimport { toast } from 'react-toastify';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contactsName = useSelector(selectNameContacts);\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.elements.name.value;\n    const number = form.elements.phone.value;\n\n    contactsName.includes(name)\n      ? toast.error(`${name} is already in contacts`)\n      : dispatch(addContact({ name, number }));\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <Typography\n        variant=\"h6\"\n        noWrap\n        component=\"a\"\n        sx={{\n          display: { xs: 'none', md: 'flex' },\n          mt: 3,\n          fontFamily: 'monospace',\n          fontWeight: 700,\n          letterSpacing: '.2rem',\n          color: 'black',\n          textDecoration: 'none',\n        }}\n      >\n        Enter a new contact\n      </Typography>\n      <form onSubmit={handleSubmit}>\n        <Box sx={{ display: { xs: 'flex', alignItems: 'center', gap: 20 } }}>\n          <div>\n            <TextField\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              size=\"small\"\n              variant=\"standard\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </div>\n\n          <div>\n            <TextField\n              label=\"Number\"\n              type=\"tel\"\n              name=\"phone\"\n              size=\"small\"\n              variant=\"standard\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </div>\n\n          <div>\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ my: 2, color: 'white', display: 'block', ml: 6 }}\n            >\n              Add contact\n            </Button>\n          </div>\n        </Box>\n      </form>\n    </>\n  );\n};\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/contacts/filterSlice';\n\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleChange = evt => {\n    dispatch(updateFilter(evt.target.value));\n  };\n  return (\n    <div>\n      <Typography\n        variant=\"h6\"\n        noWrap\n        component=\"a\"\n        sx={{\n          display: { xs: 'none', md: 'flex' },\n          mt: 2,\n          mb: 2,\n          fontFamily: 'monospace',\n          fontWeight: 700,\n          letterSpacing: '.2rem',\n          color: 'black',\n          textDecoration: 'none',\n        }}\n      >\n        Find contacts by name\n      </Typography>\n      <TextField\n        id=\"standard-basic\"\n        label=\"Input name of contact\"\n        variant=\"standard\"\n        size=\"small\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contactitem_item__mma6i\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Typography from '@mui/material/Typography';\nimport { Box } from '@mui/material';\n\nimport css from './Contactitem.module.css';\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.item}>\n      <Box\n        sx={{\n          display: {\n            xs: 'flex',\n            alignItems: 'center',\n\n            gap: 20,\n            justifyContent: 'flex-start',\n          },\n        }}\n      >\n        <Typography>{name}:</Typography>\n      </Box>\n      <Box\n        sx={{\n          display: {\n            xs: 'flex',\n            alignItems: 'center',\n            gap: 80,\n            justifyContent: 'space-between',\n          },\n        }}\n      >\n        <Typography>{number}</Typography>\n        <DeleteIcon\n          onClick={() => {\n            dispatch(deleteContact(id));\n          }}\n        />\n      </Box>\n    </li>\n  );\n};\nexport default ContactItem;\n","import { useSelector } from 'react-redux';\n\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nimport { Typography } from '@mui/material';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      <Typography\n        variant=\"h6\"\n        noWrap\n        component=\"a\"\n        sx={{\n          display: { xs: 'none', md: 'flex' },\n          mt: 4,\n          mb: 2,\n          fontFamily: 'monospace',\n          fontWeight: 700,\n          letterSpacing: '.2rem',\n          color: 'black',\n          textDecoration: 'none',\n        }}\n      >\n        Contacts list\n      </Typography>\n\n      <ul>\n        {filteredContacts.length > 0 ? (\n          filteredContacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))\n        ) : (\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            sx={{\n              display: { xs: 'none', md: 'flex' },\n              mt: 3,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.2rem',\n              color: 'red',\n              textDecoration: 'none',\n            }}\n          >\n            No contacts in phonebook.\n          </Typography>\n        )}\n      </ul>\n    </>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport css from './Contacts.module.css';\n\nimport { ProgressBar } from 'react-loader-spinner';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div className={css.container}>\n      <ContactForm />\n\n      <Filter />\n      {error && <p>{error}</p>}\n\n      {isLoading && !error && (\n        <b>\n          <ProgressBar\n            height=\"80\"\n            width=\"380\"\n            ariaLabel=\"progress-bar-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"progress-bar-wrapper\"\n            borderColor=\"black\"\n            barColor=\"grey\"\n          />\n        </b>\n      )}\n\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","data","contacts","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","sorting","filter","items","el","name","toLowerCase","includes","selectNameContacts","map","dispatch","useDispatch","contactsName","useSelector","Typography","variant","noWrap","component","sx","display","xs","md","mt","fontFamily","fontWeight","letterSpacing","color","textDecoration","onSubmit","evt","preventDefault","form","target","elements","value","number","phone","toast","addContact","reset","Box","alignItems","gap","TextField","label","type","size","pattern","title","required","Button","my","ml","mb","id","onChange","updateFilter","className","css","justifyContent","Delete","onClick","deleteContact","filteredContacts","length","useEffect","fetchContacts","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor"],"sourceRoot":""}